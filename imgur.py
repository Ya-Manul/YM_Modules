# meta developer: @YA_ManuI

import requests
from hikkatl.types import Message
from hikkatl.tl.types import DocumentAttributeVideo
from .. import loader, utils

@loader.tds
class ImgurVideoUploaderMod(loader.Module):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤–∏–¥–µ–æ –≤ Imgur –ø–æ —Ä–µ–ø–ª–∞—é –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Å—ã–ª–∫—É. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞–π—Ç–∏ –≤ cfg"""
    strings = {"name": "ImgurVideoUploader"}

    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "client_id",
                "",
                lambda: "Client-ID –æ—Ç Imgur API (—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: https://api.imgur.com/oauth2/addclient)",
                validator=loader.validators.Hidden(),
            ),
        )
        super().__init__()

    @loader.command()
    async def ivup(self, message: Message):
        """- –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ –∏–∑ —Ä–µ–ø–ª–∞—è"""
        try:
            if not self.config["client_id"]:
                await utils.answer(message, "‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏ Client-ID —á–µ—Ä–µ–∑: .cfg ImgurVideoUploader. –ì–∞–π–¥ –ø–æ –±—ã—Å—Ç—Ä–æ–º—É –ø–æ–ª—É—á–µ–Ω–∏—é @GaidImgur")
                return

            reply = await message.get_reply_message()
            if not reply or not reply.media:
                await utils.answer(message, "‚ùå –û—Ç–≤–µ—Ç—å –Ω–∞ –≤–∏–¥–µ–æ!")
                return

            if not reply.document or not any(
                isinstance(a, DocumentAttributeVideo)
                for a in reply.document.attributes
            ):
                await utils.answer(message, "‚ùå –≠—Ç–æ –Ω–µ –≤–∏–¥–µ–æ!")
                return

            video = await reply.download_media(bytes)
            if len(video) > 200 * 1024 * 1024:
                await utils.answer(message, "‚ùå –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä 200MB!")
                return

            await utils.answer(message, "‚è≥ –ó–∞–≥—Ä—É–∂–∞—é –Ω–∞ Imgur...")

            response = requests.post(
                "https://api.imgur.com/3/upload",
                headers={"Authorization": f"Client-ID {self.config['client_id']}"},
                files={"video": video},
                timeout=15
            )

            if response.status_code == 503:
                raise requests.RequestException("Imgur –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (503)")

            try:
                data = response.json()
            except Exception as e:
                error_text = f"–û—à–∏–±–∫–∞ JSON: {e}\n–û—Ç–≤–µ—Ç: {response.text[:150]}"
                raise requests.RequestException(error_text)

            if data.get("success", False) and response.status_code == 200:
                await utils.answer(message, f"‚úÖ –°—Å—ã–ª–∫–∞: {data['data']['link']}")
            else:
                error_msg = data.get("data", {}).get("error", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞")
                await utils.answer(message, f"‚ùå –û—à–∏–±–∫–∞: {error_msg}")

        except requests.RequestException as e:
            await utils.answer(message, f"üåê –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {str(e)}")
        except Exception as e:
            await utils.answer(message, f"üî• –û—à–∏–±–∫–∞: {repr(e)}")