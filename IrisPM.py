"""–ú–æ–¥—É–ª—å –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å Iris –±–æ—Ç–æ–º"""

from datetime import timedelta
import random
import logging

from telethon import functions
from telethon.tl.types import Message
from telethon.tl.custom import Message
from .. import utils, loader

__version__ = (2, 2, 8)

# meta developer: @YA_ManuI

logger = logging.getLogger(__name__)

CUBES = [
    "üé≤ –í—ã–ø–∞–ª–æ: 1",
    "üé≤ –í—ã–ø–∞–ª–æ: 2",
    "üé≤ –í—ã–ø–∞–ª–æ: 3",
    "üé≤ –í—ã–ø–∞–ª–æ: 4",
    "üé≤ –í—ã–ø–∞–ª–æ: 5",
    "üé≤ –í—ã–ø–∞–ª–æ: 6",
]


@loader.tds
class IrisMods(loader.Module):
    """–ò—Ä–∏—Å —á–∞—Ç –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –ª—Å"""

    strings = {
        "name": "IrisPM",
        "loading_photo": "‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ –≥—Ä–∞—Ñ–∏–∫–∞...",
        "error_args": "‚ùå –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã",
        "error_transfer": "‚ùå –û—à–∏–±–∫–∞: –¢—Ä–µ–±—É–µ—Ç—Å—è —É–∫–∞–∑–∞—Ç—å –∏—Ä–∏—Å–∫–∏/–≥–æ–ª–¥ –∏–ª–∏ –æ–¥",
        "error_conclusion": "‚ùå –û—à–∏–±–∫–∞: –¢—Ä–µ–±—É–µ—Ç—Å—è —É–∫–∞–∑–∞—Ç—å –∞–Ω–∫/—Ç–∞",
    }

    def __init__(self):
        self.name = self.strings["name"]
        self.iris_bot = "@iris_black_bot"
        # self.iris_moon_bot = "@iris_moon_bot"
        self.iris_id = 5443619563
        self.client = None
        self.db = None
        self.myid = None

    async def client_ready(self, client, db):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ"""
        self.client = client
        self.db = db
        self.myid = (await client.get_me()).id

    async def message_q(
        self,
        text: str,
        user_id: int,
        mark_read: bool = False,
        delete: bool = False,
    ) -> Message:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç"""
        async with self.client.conversation(user_id) as conv:
            msg = await conv.send_message(text)
            response = await conv.get_response()

            if mark_read:
                await conv.mark_read()

            if delete:
                await msg.delete()
                await response.delete()

            return response

    @loader.command()
    async def –ö—É–±–∏–∫(self, m):
        """–í—ã–∫–∏–¥—ã–≤–∞–µ—Ç —Ä–∞–Ω–¥–æ–º —Å—Ç–æ—Ä–æ–Ω—É –∫—É–±–∏–∫–∞"""
        randomfraza = random.choice(CUBES)
        await utils.answer(m, randomfraza)

    @loader.command()
    async def –ø–µ—Ä–µ–¥–∞—Ç—å(self, message: Message) -> None:
        """–ü–µ—Ä–µ–¥–∞—Ç—å {—á—Ç–æ} {–∫–æ–ª–≤–æ} {–∫–æ–º—É} - –ø–µ—Ä–µ–¥–∞–µ—Ç –∏—Ä–∏—Å–∫–∏/–≥–æ–ª–¥ –∏–ª–∏ –æ–¥"""
        args = utils.get_args_raw(message)
        if not args:
            await utils.answer(message, self.strings["error_args"])
            return

        try:
            item_type, amount, *recipient = args.split()
            amount = int(amount)

            if message.is_reply:
                replied = await message.get_reply_message()
                recipient = f"@{replied.from_id}"
            else:
                recipient = recipient[0]

            transfer_type = {
                "–≥–æ–ª–¥": " –≥–æ–ª–¥",
                "–∏—Ä–∏—Å–∫–∏": "",
                "–∏—Ä–∏—Å": "",
                "–æ–¥": " –æ–¥",
            }.get(item_type)

            if transfer_type is None:
                await utils.answer(message, self.strings["error_transfer"])
                return

            text = f"–ü–µ—Ä–µ–¥–∞—Ç—å{transfer_type} {amount} {recipient}"

            if " | " in args:
                text += f"\n{args.split(' | ')[1]}"

            response = await self.message_q(
                text, self.iris_bot, mark_read=True, delete=True
            )
            await utils.answer(message, response.text)

        except (ValueError, IndexError):
            await utils.answer(message, self.strings["error_args"])

    @loader.command()
    async def –ì–ú–ò(self, message: Message) -> None:
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–∏ –≤–∞—à–∏—Ö –∏—Ä–∏—Å–æ–∫"""
        response = await self.message_q(
            "–≥–¥–µ –º–æ–∏ –∏—Ä–∏—Å–∫–∏", self.iris_bot, mark_read=True, delete=True
        )
        await utils.answer(message, response.text)

    @loader.command()
    async def –ì–ú–ó(self, message: Message) -> None:
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–∏ –≤–∞—à–∏—Ö –≥–æ–ª–¥"""
        response = await self.message_q(
            "–≥–¥–µ –º–æ—è –≥–æ–ª–¥–∞", self.iris_bot, mark_read=True, delete=True
        )
        await utils.answer(message, response.text)

    @loader.command()
    async def –±–æ—Ç(self, message: Message) -> None:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞"""
        response = await self.message_q(
            "–±–æ—Ç", self.iris_bot, mark_read=True, delete=True
        )
        await utils.answer(message, response.text)

    @loader.command()
    async def —É–∫—Ä—Ñ(self, message: Message) -> None:
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—à—É —Å—É—Ç–æ—á–Ω—É—é —Å—Ç–∞—Ç—å—é –ø–æ –∏—Ä–∏—Å—É"""
        response = await self.message_q(
            "!–º–æ—è —Å—Ç–∞—Ç—å—è", self.iris_bot, mark_read=True, delete=True
        )
        await utils.answer(message, response.text)

    @loader.command()
    async def –ì–ú–ü(self, message: Message) -> None:
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–∏ –≤–∞—à–∏—Ö –æ–¥"""
        response = await self.message_q(
            "–≥–¥–µ –º–æ–∏ –ø–æ–Ω—á–∏–∫–∏", self.iris_bot, mark_read=True, delete=True
        )
        await utils.answer(message, response.text)

    @loader.command()
    async def –º–µ—à–æ–∫(self, message: Message) -> None:
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∞—à–µ–≥–æ –º–µ—à–∫–∞"""
        response = await self.message_q("–ú–µ—à–æ–∫", self.iris_bot, delete=True)
        await utils.answer(message, response.text)

    @loader.command()
    async def –±–∏—Ä–∂–∞(self, message: Message) -> None:
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –±–∏—Ä–∂–∏"""
        response = await self.message_q(
            "–±–∏—Ä–∂–∞", self.iris_bot, mark_read=True, delete=True
        )
        await utils.answer(message, response.text)

    @loader.command()
    async def –≥—Ä–∞—Ñ–∏–∫(self, message: Message) -> None:
        """–í—ã–≤–æ–¥ –≥—Ä–∞—Ñ–∏–∫–∞ —Ü–µ–Ω –≥–æ–ª–¥—ã"""
        loading = await utils.answer(message, self.strings["loading_photo"])

        async with self.client.conversation(self.iris_bot) as conv:
            await conv.send_message(".–±–∏—Ä–∂–∞ –≥—Ä–∞—Ñ–∏–∫")
            response = await conv.get_response()

            if response.photo:
                await loading.delete()
                await message.client.send_message(
                    message.peer_id,
                    file=response.photo,
                    reply_to=getattr(message, "reply_to_msg_id", None),
                )

    @loader.command()
    async def —Ö–µ–ª–ø(self, message: Message) -> None:
        """–í—ã–≤–æ–¥ –ø–æ–º–æ—â–∏ –ø–æ –∏—Ä–∏—Å—É"""
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–º–æ—â–∏
            response = await self.message_q(".–ø–æ–º–æ—â—å", self.iris_bot, mark_read=True, delete=False)
        
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await utils.answer(message, response.text)
        
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ "–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç"
            if message.text and "–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç" in message.text.lower():
                # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                await message.forward(self.iris_bot)  # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É
                await utils.answer(message, "–°–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º '–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç' –ø–µ—Ä–µ—Å–ª–∞–Ω–æ.")
            
        except Exception as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
            await utils.answer(message, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
            if hasattr(self, 'logger'):
                self.logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ '—Ö–µ–ª–ø': {e}")
                
    @loader.command()
    async def –∏—Ç–æ–ø(self, message: Message) -> None:
        """–í—ã–≤–æ–¥ —Ç–æ–ø–∞ –¥–Ω—è"""
        response = await self.message_q(
            "–±—Ç–æ–ø –¥–Ω—è", self.iris_bot, mark_read=True, delete=True
        )
        await utils.answer(message, response.text)

    @loader.command()
    async def –∏–ø–∏–Ω–≥(self, message: Message) -> None:
        """–í—ã–≤–æ–¥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏—Ä–∏—Å–∞"""
        response = await self.message_q(
            ".–∞–∫—Ç–∏–≤ –∏—Ä–∏—Å–∞", self.iris_bot, mark_read=True, delete=True
        )
        await utils.answer(message, response.text)

    @loader.command()
    async def —Ñ(self, message: Message) -> None:
        """–ó–∞–ø—É—Å–∫ —Ñ–∞—Ä–º—ã"""
        response = await self.message_q(
            "—Ñ–∞—Ä–º–∞", self.iris_bot, mark_read=True, delete=True
        )
        await utils.answer(message, response.text)

    @loader.command()
    async def –≥–æ–ª–¥(self, message: Message) -> None:
        """–í—ã–≤–æ–¥ —Ç–æ–ø–∞ —Ö—Ä–∞–Ω–∏—Ç–µ–ª–µ–π –≥–æ–ª–¥—ã"""
        response = await self.message_q(
            "–∑–æ–ª–æ—Ç–æ–π —Ä–µ–π—Ç–∏–Ω–≥", self.iris_bot, mark_read=True, delete=True
        )
        await utils.answer(message, response.text)

    @loader.command()
    async def –∫–æ–º(self, message: Message) -> None:
        """–í—ã–≤–æ–¥ –∫–æ–º–∞–Ω–¥ –∏—Ä–∏—Å–∞"""
        response = await self.message_q(
            "–∫–æ–º–∞–Ω–¥—ã", self.iris_bot, mark_read=True, delete=True
        )
        await utils.answer(message, response.text)

    @loader.command()
    async def –∞—á(self, message: Message) -> None:
        """{—Ç–∞/–∞–Ω–∫} {@/—Ä–µ–ø–ª–∞–π} –í—ã–≤–æ–¥ –∞–Ω–∫–µ—Ç—ã –∏–ª–∏ –∞—á–∏–≤–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        args = utils.get_args_raw(message)
        if not args:
            await utils.answer(message, self.strings["error_args"])
            return

        try:
            parts = args.split()
            if len(parts) < 1:
                await utils.answer(message, self.strings["error_args"])
                return

            item_type = parts[0]

            recipient = None
            if len(parts) > 1:
                recipient = parts[1]

            elif message.is_reply:
                replied = await message.get_reply_message()
                recipient = f"@{replied.sender_id}"

            transfer_type = {
                "—Ç–∞": "—Ç–≤–æ–∏ –∞—á–∏–≤–∫–∏",
                "–∞–Ω–∫": "–∞–Ω–∫–µ—Ç–∞",
            }.get(item_type)

            if transfer_type is None:
                await utils.answer(message, self.strings["error_conclusion"])
                return

            if item_type == "—Ç–∞" and not recipient:
                text = ".–º–æ–∏ –∞—á–∏–≤–∫–∏"
            else:
                text = transfer_type
                if recipient:
                    text += f" {recipient}"

            if " | " in args:
                text += f"\n{args.split(' | ')[1]}"

            response = await self.message_q(
                text, self.iris_bot, mark_read=True, delete=True
            )
            await utils.answer(message, response.text)

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ –ø–ø—Ç: {e}")
            await utils.answer(message, self.strings["error_args"])

    @loader.command()
    async def –ª—Å(self, message: Message) -> None:
        """–ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –ª—Å –∏—Ä–∏—Å–∞"""
        text = (
            "‚úèÔ∏è –õ–° –ò—Ä–∏—Å–∞ –∑–¥–µ—Å—å</b>\n"
            "<b><i><a href='https://t.me/iris_black_bot'>Iris | Black Diamond</a></i></b>\n"
        )
        await utils.answer(message, text)

    @loader.command()
    async def —Å–∞–±(self, message: Message) -> None:
        """–ü–æ–¥–ø–∏—Å–∫–∞/–æ—Ç–ø–∏—Å–∫–∞ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç: —Å–∞–± {+/-} {@/—Ä–µ–ø–ª–∞–π}"""
        args = utils.get_args_raw(message)
        if not args:
            await utils.answer(message, self.strings["error_args"])
            return

        try:
            action, *recipient = args.split()
            if action not in ["+", "-"]:
                await utils.answer(
                    message, "‚ùå –£–∫–∞–∂–∏—Ç–µ + –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –∏–ª–∏ - –¥–ª—è –æ—Ç–ø–∏—Å–∫–∏"
                )
                return

            if message.is_reply:
                replied = await message.get_reply_message()
                recipient = f"@{replied.from_id}"
            else:
                recipient = recipient[0]

            text = f"{action}—Å–∞–± {recipient}"
            if " | " in args:
                text += f"\n{args.split(' | ')[1]}"

            response = await self.message_q(
                text, self.iris_bot, mark_read=True, delete=True
            )
            await utils.answer(message, response.text)

        except (ValueError, IndexError):
            await utils.answer(message, self.strings["error_args"])

    @loader.command()
    async def –∏–±—Ä–∞–∫–∏(self, message: Message) -> None:
        """–í—ã–≤–æ–¥ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–ø–∞ –±—Ä–∞–∫–æ–≤"""
        response = await self.message_q(
            "—Ç–æ–ø –±—Ä–∞–∫–æ–≤", self.iris_bot, mark_read=True, delete=True
        )
        await utils.answer(message, response.text)

    @loader.command()
    async def –º—Å–∞–±(self, message: Message) -> None:
        """–í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ –≤–∞—à–∏—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤"""
        response = await self.message_q(
            "–º–æ–∏ —Å–∞–±—ã", self.iris_bot, mark_read=True, delete=True
        )
        await utils.answer(message, response.text)

    @loader.command()
    async def –º–ø–¥–ø(self, message: Message) -> None:
        """–í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ –≤–∞—à–∏—Ö –ø–æ–¥–ø–∏—Å–æ–∫"""
        response = await self.message_q(
            "–º–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏", self.iris_bot, mark_read=True, delete=True
        )
        await utils.answer(message, response.text)

    @loader.command()
    async def —Å–∞–±—ã(self, message: Message) -> None:
        """–í—ã–≤–æ–¥ —Ç–æ–ø–∞ –ø–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º"""
        response = await self.message_q(
            "–≤—Å–µ —Å–∞–±—ã", self.iris_bot, mark_read=True, delete=True
        )
        await utils.answer(message, response.text)

    @loader.command()
    async def –ø–æ–≥–æ–¥–∞(self, message: Message) -> None:
        """–í—ã–≤–æ–¥ –ø–æ–≥–æ–¥—ã: –ø–æ–≥–æ–¥–∞ {–≥–æ—Ä–æ–¥}"""
        args = utils.get_args_raw(message)
        if not args:
            await utils.answer(message, "‚ùå –£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥")
            return

        text = f"!–ø–æ–≥–æ–¥–∞ {args}"
        response = await self.message_q(
            text, self.iris_bot, mark_read=True, delete=True
        )
        await utils.answer(message, response.text)

    @loader.command()
    async def –∏—Å–ø–∞–º(self, message: Message) -> None:
        """–í—ã–≤–æ–¥ –≤–∞—à–∏—Ö –±–∞–Ω–æ–≤ –≤–æ –≤—Å–µ–ª–µ–Ω–Ω–æ–π –∏—Ä–∏—Å"""
        response = await self.message_q(
            "–ú–æ–π —Å–ø–∞–º", self.iris_bot, mark_read=True, delete=True
        )
        await utils.answer(message, response.text)

    @loader.command()
    async def —Ö–µ–ª–ø–∏—Ä–∏—Å(self, message: Message) -> None:
        """–ü–æ–º–æ—â—å –ø–æ –º–æ–¥—É–ª—é –ò—Ä–∏—Å –¥–ª—è –ª—Å"""
        help_text = (
            "üçÄ| <b>–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:</b>\n\n"
            "<code>.–ø–µ—Ä–µ–¥–∞—Ç—å</code> - –ø–µ—Ä–µ–¥–∞—ë—Ç –∏—Ä–∏—Å–∫–∏/–≥–æ–ª–¥/–æ–¥. .–ø–µ—Ä–µ–¥–∞—Ç—å {—á—Ç–æ} {–∫–æ–ª–≤–æ} {@/—Ä–µ–ø–ª–∞–π}\n"
            "<code>.–≥–º–∏</code> - –≤—ã–≤–æ–¥–∏—Ç –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤–∞—à–∏—Ö –∏—Ä–∏—Å–æ–∫\n"
            "<code>.–≥–º–∑</code> - –≤—ã–≤–æ–¥–∏—Ç –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤–∞—à–∏—Ö –≥–æ–ª–¥\n"
            "<code>.–≥–º–ø</code> - –≤—ã–≤–æ–¥–∏—Ç –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤–∞—à–∏—Ö –æ–¥\n"
            "<code>.–º–µ—à–æ–∫</code> - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—à –º–µ—à–æ–∫\n"
            "<code>.–±–∏—Ä–∂–∞</code> - –≤—ã–≤–æ–¥–∏—Ç —Å—Ç–∞–∫–∞–Ω –∑–∞—è–≤–æ–∫ –±–∏—Ä–∂–∏\n"
            "<code>.–≥—Ä–∞—Ñ–∏–∫</code> - –≤—ã–≤–æ–¥ –≥—Ä–∞—Ñ–∏–∫–∞ —Ü–µ–Ω –±–∏—Ä–∂–∏\n"
            "<code>.—Ö–µ–ª–ø</code> - –≤—ã–≤–æ–¥–∏—Ç –º–µ–Ω—é –ø–æ–º–æ—â–∏ –∏—Ä–∏—Å–∞\n"
            "<code>.–∏—Ç–æ–ø</code> - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ø –¥–Ω—è\n"
            "<code>.–∏–ø–∏–Ω–≥</code> - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –±–æ—Ç–æ–≤ –∏—Ä–∏—Å\n"
            "<code>.—Ñ</code> - –∑–∞–ø—É—Å–∫–∞–µ—Ç —Ñ–µ—Ä–º—É\n"
            "<code>.–≥–æ–ª–¥</code> - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ø —Ö—Ä–∞–Ω–∏—Ç–µ–ª–µ–π –≥–æ–ª–¥—ã\n"
            "<code>.–∫—É–±–∏–∫</code> - –±—Ä–æ—Å–∞–µ—Ç –∫—É–±–∏–∫\n"
            "<code>.–∫–æ–º</code> - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –∏—Ä–∏—Å–∞\n"
            "<code>.–æ—Å–∏</code> - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —á–∞—Ç—ã –∏—Ä–∏—Å–∞\n"
            "<code>.–±–æ—Ç</code> - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞\n"
            "<code>.—É–∫—Ä—Ñ</code> - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—à—É —Å—É—Ç–æ—á–Ω—É—é —Å—Ç–∞—Ç—å—é\n"
            "<code>.–∞—á</code> - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–Ω–∫–µ—Ç—É –∏–ª–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n "
            "<code>.–ª—Å</code> - –±—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –ª—Å –ß–µ—Ä–Ω–æ–≥–æ –∏—Ä–∏—Å–∞\n"
            "<code>.—Å–∞–±</code> - –ø–æ–¥–ø–∏—Å–∫–∞/–æ—Ç–ø–∏—Å–∫–∞ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
            "<code>.–∏–±—Ä–∞–∫–∏</code> - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ø –±—Ä–∞–∫–æ–≤\n"
            "<code>.–º—Å–∞–±</code> - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—à–∏—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤\n"
            "<code>.–º–ø–¥–ø</code> - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—à–∏ –ø–æ–¥–ø–∏—Å–∫–∏\n"
            "<code>.—Å–∞–±—ã</code> - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ø –ø–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º\n"
            "<code>.–ø–æ–≥–æ–¥–∞</code> - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–≥–æ–¥—É –≤ –≥–æ—Ä–æ–¥–µ\n"
            "<code>.–∏—Å–ø–∞–º</code> - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—à–∏ –±–∞–Ω—ã –≤ –∏—Ä–∏—Å–µ\n"
        )
        await utils.answer(message, help_text)

    @loader.command()
    async def –æ—Å–∏(self, message: Message) -> None:
        """–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è —Å–µ—Ç–∫–∞ –∏—Ä–∏—Å–∞"""
        network_text = (
            "üóì| <b>–ß–∞—Ç—ã –∏–∑ —Å–µ—Ç–∫–∏ ¬´–∏—Ä–∏—Å_—á–º¬ª:\n\n"
            "<b><i>1. <emoji document_id=5319161050128459957>üë®‚Äçüíª</emoji> "
            "<a href='https://t.me/iris_cm_chat'>Iris | –ü–æ–º–æ—â—å –ø–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É</a></i></b>\n\n"
            "<b><i>2. <emoji document_id=5291897920583381342>ü•µ</emoji> "
            "<a href='https://t.me/iris_talk'>Iris | –û—Ñ—Ñ—Ç–æ–ø</a></i></b>\n\n"
            "<b><i>3. <emoji document_id=5213224006735376143>üí©</emoji> "
            "<a href='https://t.me/+PjZR20ZQHt44ZWNi'>Iris | –ê–Ω—Ç–∏—Å–ø–∞–º –¥—Ä—É–∂–∏–Ω–∞</a></i></b>\n\n"
            "<b><i>4. <emoji document_id=5240379805047728736>üí∞</emoji> "
            "<a href='https://t.me/iris_trade'>Iris | –ë–∏—Ä–∂–∞</a></i></b>\n\n"
            "<b><i>5. <emoji document_id=5224570799230298867>‚ò£Ô∏è</emoji> "
            "<a href='https://t.me/iris_biogame'>Iris | –ë–∏–æ–≤–æ–π–Ω—ã</a></i></b>\n\n"
            "<b><i>6. <emoji document_id=5404573776253825754>üç¨</emoji> "
            "<a href='https://t.me/iris_bonus'>Iris | –ê–∫—Ü–∏–∏ –∏ –±–æ–Ω—É—Å—ã</a></i></b>\n\n"
            "<b><i>7. <emoji document_id=5314678293977378981>‚òéÔ∏è</emoji> "
            "<a href='https://t.me/iris_brief_chat'>Iris | –ú–∞—Å—Ç–µ—Ä—Å–∫–∞—è –∏–¥–µ–π</a></i></b>\n\n"
            "<b><i>8. <emoji document_id=5215209935188534658>üìù</emoji> "
            "<a href='https://t.me/iris_feedback'>Iris | –û—Ç–∑—ã–≤—ã –æ–± –∞–≥–µ–Ω—Ç–∞—Ö</a></i></b>\n\n"
            "<b><i>9. <emoji document_id=5402320181143811311>ü§®</emoji> "
            "<a href='https://t.me/iris_duels'>Iris | –ó–æ–ª–æ—Ç—ã–µ –¥—É—ç–ª–∏</a></i></b>\n\n"
            "<b><i>10. <emoji document_id=5019824691708167395>‚≠êÔ∏è</emoji> "
            "<a href='https://t.me/+yWT9IUF4FxhiMTdi'>Iris | –ó–≤–µ–∑–¥–Ω—ã–π –æ—Ñ—Ñ—Ç–æ–ø</a></i></b>\n"
        )
        await utils.answer(message, network_text)
