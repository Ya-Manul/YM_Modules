# meta developer: @YA_ManuI

import random
import string
from .. import loader, utils

@loader.tds
class PasswordGeneratorMod(loader.Module):
    """–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –ø–∞—Ä–æ–ª–µ–π"""
    strings = {"name": "GenPass"}

    @loader.command()
    async def ghelp(self, message):
        """- –ø–æ–∫–∞–∑–∞—Ç—å –æ–ø—Ü–∏–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏"""
        text = (
            "‚öôÔ∏è <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</b>\n\n"
            "‚ñ´Ô∏è –£–∫–∞–∂–∏ —á–∏—Å–ª–æ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –¥–ª–∏–Ω—ã –ø–∞—Ä–æ–ª—è\n"
            "‚ñ´Ô∏è –ü—Ä–∏–º–µ—Ä: <code>.genpass 16</code>\n"
            "‚ñ´Ô∏è –î–∏–∞–ø–∞–∑–æ–Ω: <b>4-999 —Å–∏–º–≤–æ–ª–æ–≤</b>\n"
            "‚ñ´Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Å–∏–º–≤–æ–ª—ã:\n"
            "<code>A-Z a-z 0-9 !@#$%^&*()</code>"
        )
        await utils.answer(message, text)

    @loader.command()
    async def genpass(self, message):
        """[–¥–ª–∏–Ω–∞] - —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–æ–ª—å"""
        args = utils.get_args_raw(message)
        try:
            length = int(args) if args.isdigit() else 8
        except:
            length = 8
        
        length = max(4, min(999, length))
        
        chars = string.ascii_letters + string.digits + "!@#$%^&*()"
        password = "".join(random.SystemRandom().choice(chars) for _ in range(length))
        
        await utils.answer(message, f"üîê –ü–∞—Ä–æ–ª—å ({length} —Å–∏–º–≤–æ–ª–æ–≤):\n<code>{password}</code>")